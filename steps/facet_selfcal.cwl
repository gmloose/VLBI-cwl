cwlVersion: v1.2
class: CommandLineTool
id: facet_selfcal
label: Facet Selfcal
doc: |
    Performs direction independent calibration
    of the international antenna array.

baseCommand:
    - python3
    - run_selfcal.py

inputs:
    - id: msin
      type: Directory
      doc: |
        Input data phase-shifted to the
        delay calibrator in MeasurementSet format.

    - id: skymodel
      type: File?
      doc: |
        The skymodel to be used in the first
        cycle in the self-calibration.

    - id: configfile
      type: File
      doc: A plain-text file containing configuration options for self-calibration.

    - id: selfcal
      type: Directory
      doc: External self-calibration script.

    - id: h5merger
      type: Directory
      doc: External LOFAR helper scripts for merging HDF5 files.

outputs:
    - id: h5parm
      type: File
      outputBinding:
        glob: merged_addCS_selfcalcyle009_linear*.h5
      doc: |
        The calibration solution files generated
        by lofar_facet_selfcal in HDF5 format.

    - id: images
      type: File[]
      outputBinding:
        glob: ['*.png', plotlosoto*/*.png]
      doc: |
        Delay calibrator images generated by lofar_facet_selfcal.

    - id: fits_images
      type: File[]
      outputBinding:
        glob: '*MFS-image.fits'

    - id: logfile
      type: File[]
      outputBinding:
         glob: [facet_selfcal*.log, selfcal.log]
      doc: |
        The files containing the stdout
        and stderr from the step.

requirements:
  - class: ShellCommandRequirement
  - class: InlineJavascriptRequirement
  - class: InitialWorkDirRequirement
    listing:
      - entry: $(inputs.msin)
      - entryname: run_selfcal.py
        entry: |
          import subprocess
          import json

          inputs = json.loads(r"""$(inputs)""")

          msin = inputs['msin']['basename']
          configfile = inputs['configfile']['path']
          skymodel = inputs['skymodel']['path'] if inputs['skymodel'] else None
          selfcal = inputs['selfcal']['path']
          h5merge = inputs['h5merger']['path']

          run_selfcal = (f"python3 {selfcal}/facetselfcal.py {msin}"
                         f" --helperscriptspath {selfcal}"
                         f" --configpath {configfile}"
                         f" --helperscriptspathh5merge {h5merge}")
          if skymodel:
            run_selfcal += f" --skymodel {skymodel}"

          subprocess.run(run_selfcal, shell = True)

hints:
  - class: DockerRequirement
    dockerPull: vlbi-cwl

stdout: facet_selfcal.log
stderr: facet_selfcal_err.log
