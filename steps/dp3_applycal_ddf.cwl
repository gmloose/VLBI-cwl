cwlVersion: v1.2
class: CommandLineTool
id: dp3_applycal_ddf
label: DP3 applycal
doc: |
    Applies the solutions generated by the
    DDFacet pipeline to the input data.

baseCommand: DP3

arguments:
    - msout=.
    - steps=[applyddf]
    - applyddf.type=applycal
    - applyddf.correction=fulljones
    - applyddf.solset=sol000
    - applyddf.soltab=[amplitude000,phase000]

inputs:
    - id: msin
      type: Directory
      doc: Input data in MeasurementSet format.
      inputBinding:
        position: 0
        prefix: msin=
        separate: false

    - id: ddf_solset
      type: File
      doc: |
        The solution tables generated by
        the DDF pipeline in an HDF5 format.
      inputBinding:
        position: 1
        prefix: applyddf.parmdb=
        separate: false

    - id: max_dp3_threads
      type: int?
      default: 5
      doc: The number of threads per DP3 process.
      inputBinding:
        prefix: numthreads=
        separate: false

    - id: msin_datacolumn
      type: string?
      default: DATA
      inputBinding:
        prefix: msin.datacolumn=
        separate: false
        shellQuote: false
      doc: The name of the input data column.

    - id: msout
      type: string?
      default: "."
      inputBinding:
        prefix: msout=
        separate: false
      doc: The MeasurementSet to write to.

    - id: msout_datacolumn
      type: string?
      default: DATA_DI_CORRECTED
      inputBinding:
        prefix: msout.datacolumn=
        separate: false
      doc: The column to write the output data to.

    - id: storagemanager
      type: string?
      default: dysco
      inputBinding:
        prefix: msout.storagemanager=
        separate: false
      doc: |
        String that specifies what storage manager
        to use. By default uses dysco compression.

    - id: fullresflags
      type: boolean?
      default: False
      inputBinding:
        prefix: msout.writefullresflag=
        separate: false
      doc: |
        Specifies whether to write
        the full resolution flags.

outputs:
    - id: output_data
      type: Directory
      outputBinding:
        glob: $(inputs.msin.basename)
      doc: |
        The output data with corrected
        data in MeasurementSet format.

    - id: logfile
      type: File[]
      outputBinding:
        glob: dp3_applycal*.log
      doc: |
        The files containing the stdout
        and stderr from the step.

requirements:
  - class: InitialWorkDirRequirement
    listing:
      - entry: $(inputs.msin)
        writable: true
  - class: InplaceUpdateRequirement
    inplaceUpdate: true
  - class: ResourceRequirement
    coresMax: $(inputs.max_dp3_threads)
    coresMin: $(inputs.max_dp3_threads)

hints:
  - class: DockerRequirement
    dockerPull: vlbi-cwl

stdout: dp3_applycal.log
stderr: dp3_applycal_err.log

